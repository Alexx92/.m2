<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>xalan</groupId>
    <artifactId>xalan-parent</artifactId>
    <version>2.7.1.redhat-8</version>
  </parent>

  <groupId>xalan</groupId>
  <artifactId>xalan</artifactId>
  <version>2.7.1.redhat-8</version>
  <packaging>jar</packaging>

  <name>Xalan Java</name>
  <description>Xalan-Java is an XSLT processor for transforming XML documents into HTML,
    text, or other XML document types. It implements XSL Transformations (XSLT)
    Version 1.0 and XML Path Language (XPath) Version 1.0 and can be used from
    the command line, in an applet or a servlet, or as a module in other program.</description>

  <dependencies>
    <dependency>
      <groupId>bcel</groupId>
      <artifactId>bcel</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>xalan</groupId>
      <artifactId>serializer</artifactId>
    </dependency>
    <dependency>
      <groupId>java-cup</groupId>
      <artifactId>java-cup</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>xml-apis</groupId>
      <artifactId>xml-apis</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>xerces</groupId>
      <artifactId>xercesImpl</artifactId>
      <optional>true</optional>
    </dependency>
  </dependencies>

  <build>
    <resources>
      <resource>
        <directory>${project.basedir}/src/main/resources</directory>
        <includes>
          <include>**/*</include>
        </includes>
        <filtering>true</filtering>
      </resource>
      <resource>
        <directory>${project.build.sourceDirectory}</directory>
        <includes>
          <include>**/*.properties</include>
        </includes>
        <filtering>true</filtering>
      </resource>
    </resources>
    <plugins>
      <plugin>
        <groupId>de.jflex</groupId>
        <artifactId>maven-jflex-plugin</artifactId>
        <executions>
          <execution>
            <id>generate-lexer</id>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <lexDefinitions>
                <lexDefinition>${project.build.sourceDirectory}/org/apache/xalan/xsltc/compiler/xpath.lex</lexDefinition>
              </lexDefinitions>
              <jlex>true</jlex>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>generate-version-java</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <filter token="version.VERSION" value="${parsedVersion.majorVersion}"></filter>
                <filter token="version.RELEASE" value="${parsedVersion.minorVersion}"></filter>
                <filter token="version.MINOR" value="${parsedVersion.incrementalVersion}"></filter>
                <filter token="version.DEVELOPER" value=""></filter>
                <filter token="parser.version.VERSION" value="${parser.version.VERSION}"></filter>
                <filter token="parser.version.RELEASE" value="${parser.version.RELEASE}"></filter>
                <filter token="parser.version.MINOR" value="${parser.version.MINOR}"></filter>
                <copy tofile="${project.build.sourceDirectory}/org/apache/xalan/Version.java" file="${project.build.sourceDirectory}/org/apache/xalan/Version.src" filtering="true"></copy>
                <copy tofile="${project.build.sourceDirectory}/org/apache/xalan/processor/XSLProcessorVersion.java" file="${project.build.sourceDirectory}/org/apache/xalan/processor/XSLProcessorVersion.src" filtering="true"></copy>
              </target>
              <sourceRoot>${project.build.directory}/generated-sources/java</sourceRoot>
            </configuration>
          </execution>
          <execution>
            <id>generate-parser</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <mkdir dir="${project.build.directory}/generated-sources/cup/org/apache/xalan/xsltc/compiler"></mkdir>
                <delete file="${project.build.directory}/generated-sources/cup/org/apache/xalan/xsltc/compiler/XPathParser.java"></delete>
                <java classname="java_cup.Main" dir="${project.build.directory}/generated-sources/cup/org/apache/xalan/xsltc/compiler" failonerror="true" fork="true">
                  <arg value="-parser"></arg>
                  <arg value="XPathParser"></arg>
                  <arg value="-expect"></arg>
                  <arg value="0"></arg>
                  <arg value="${project.build.sourceDirectory}/org/apache/xalan/xsltc/compiler/xpath.cup"></arg>
                  <classpath>
                    <path refid="maven.compile.classpath"></path>
                  </classpath>
                </java>
              </target>
              <sourceRoot>${project.build.directory}/generated-sources/cup</sourceRoot>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <excludes>
            <exclude>org/apache/xalan/xsltc/util/JavaCupRedirect.class</exclude>
          </excludes>
          <archive>
            <manifestFile>${project.build.directory}/classes/META-INF/MANIFEST.MF</manifestFile>
          </archive>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
